"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .amount import Amount
from .refundcarddetails import RefundCardDetails
from .refundstatus import RefundStatus
from datetime import datetime
from moov import utils
from moov.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated


class CardAcquiringRefundErrorData(BaseModel):
    refund_id: Annotated[str, pydantic.Field(alias="refundID")]
    r"""Identifier for the refund."""

    created_on: Annotated[datetime, pydantic.Field(alias="createdOn")]

    updated_on: Annotated[datetime, pydantic.Field(alias="updatedOn")]

    status: RefundStatus

    amount: Amount

    card_details: Annotated[
        Optional[RefundCardDetails], pydantic.Field(alias="cardDetails")
    ] = None


class CardAcquiringRefundError(Exception):
    r"""Details of a card refund."""

    data: CardAcquiringRefundErrorData

    def __init__(self, data: CardAcquiringRefundErrorData):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(self.data, CardAcquiringRefundErrorData)
