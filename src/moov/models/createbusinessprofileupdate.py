"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .addressupdate import AddressUpdate, AddressUpdateTypedDict
from .businesstype import BusinessType
from .industrycodesupdate import IndustryCodesUpdate, IndustryCodesUpdateTypedDict
from .phonenumber import PhoneNumber, PhoneNumberTypedDict
from .primaryregulator import PrimaryRegulator
from .taxidupdate import TaxIDUpdate, TaxIDUpdateTypedDict
from moov.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class CreateBusinessProfileUpdateTypedDict(TypedDict):
    legal_business_name: NotRequired[str]
    r"""The legal name under which the entity is registered."""
    doing_business_as: NotRequired[str]
    r"""A registered trade name under which the business operates, if different from its legal name."""
    business_type: NotRequired[BusinessType]
    r"""The type of entity represented by this business."""
    address: NotRequired[AddressUpdateTypedDict]
    phone: NotRequired[PhoneNumberTypedDict]
    email: NotRequired[str]
    website: NotRequired[str]
    description: NotRequired[str]
    tax_id: NotRequired[TaxIDUpdateTypedDict]
    r"""An EIN (employer identification number) for the business. For sole proprietors, an SSN can be used as the EIN."""
    industry_codes: NotRequired[IndustryCodesUpdateTypedDict]
    primary_regulator: NotRequired[PrimaryRegulator]
    r"""If the business is a financial institution, this field describes its primary regulator."""


class CreateBusinessProfileUpdate(BaseModel):
    legal_business_name: Annotated[
        Optional[str], pydantic.Field(alias="legalBusinessName")
    ] = None
    r"""The legal name under which the entity is registered."""

    doing_business_as: Annotated[
        Optional[str], pydantic.Field(alias="doingBusinessAs")
    ] = None
    r"""A registered trade name under which the business operates, if different from its legal name."""

    business_type: Annotated[
        Optional[BusinessType], pydantic.Field(alias="businessType")
    ] = None
    r"""The type of entity represented by this business."""

    address: Optional[AddressUpdate] = None

    phone: Optional[PhoneNumber] = None

    email: Optional[str] = None

    website: Optional[str] = None

    description: Optional[str] = None

    tax_id: Annotated[Optional[TaxIDUpdate], pydantic.Field(alias="taxID")] = None
    r"""An EIN (employer identification number) for the business. For sole proprietors, an SSN can be used as the EIN."""

    industry_codes: Annotated[
        Optional[IndustryCodesUpdate], pydantic.Field(alias="industryCodes")
    ] = None

    primary_regulator: Annotated[
        Optional[PrimaryRegulator], pydantic.Field(alias="primaryRegulator")
    ] = None
    r"""If the business is a financial institution, this field describes its primary regulator."""
